{"version":3,"sources":["components/Nav.js","components/NewPost.js","components/Feed.js","components/Main.js","components/Aside.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","class","aria-hidden","NewPost","onNewTweet","type","placeholder","onClick","Feed","tweets","useState","setUserName","map","tweet","e","userName","data","Main","setTweets","concat","Aside","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d275419.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Nav() {\n    return (\n        <div className='header'>\n        <div></div>\n        <div className='nav'>\n          <div className='nav-bar'>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>Home</div>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>Explore</div>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-bell-o\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>Notification</div>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>Messages</div>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-bookmark-o\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>Bookmarks</div>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>Lists</div>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>Profile</div>\n              </div>\n            </a>\n            <a href='http://localhost:3000/' className='nav-container'>\n              <div className='nav-list'>\n                <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i>\n                <div className='nav-text'>More</div>\n              </div>\n            </a>\n            <button className='nav-text__button'>Tweet</button>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Nav;","import React from 'react'\n\nfunction NewPost({onNewTweet}) {\n    return (\n        <div>\n            <div className='home'>Home</div>\n            <div className='status'>\n                <div className='user'>\n                    <div className='user-icon'></div>\n                </div>\n                <div className='status-component'>\n                    <form>\n                        <input className='new-tweet' type=\"text\" placeholder=\"What's happening?\" />\n                    </form>\n                    <div className='status-icon__component'>\n                        <div className='status-icon'>\n                            <i class=\"fa fa-picture-o icon\" aria-hidden=\"true\"></i>\n                            <i class=\"fa fa-file-o icon\" aria-hidden=\"true\"></i>\n                            <i class=\"fa fa-align-left icon\" aria-hidden=\"true\"></i>\n                            <i class=\"fa fa-smile-o icon\" aria-hidden=\"true\"></i>\n                        </div>\n                        <div className='button-component'>\n                            <button className='status-button' onClick={onNewTweet}>Tweet</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"break\"></div>\n        </div>\n    )\n}\n\nexport default NewPost;","import React, { useState } from 'react'\n\n\nfunction Feed({tweets}) {\n    const [userName, setUserName] = useState('Pau');\n   \n    return (\n        <div>\n            {/* <button onClick={ e => setTweets(tweets.concat({userName: 'Paulo', tweet: \"24-5\"})) }>tweet</button> */}\n            {\n                tweets.map(tweet => (\n                    <>\n                        <div className='feed'>\n                            <div className='user'>\n                                <div className='user-icon' onClick={e => setUserName('Kahit ano')}></div>\n                                {/* <input type=\"text\" name=\"\" id=\"\" value={userName} onChange={e => setUserName(e.target.value)}/> */}\n                            </div>\n                            <div className='user-component'>\n                                <div className='user-data'>\n                                    <div className='userName'>{tweet.userName}</div>\n                                    <div className='userId'>@impaubonilla</div>\n                                    <div>4m</div>\n                                </div>\n                                <div className='tweet-section'>\n                                    <div className='user-status'>\n                                        <div>{tweet.tweet}</div>\n                                        <div className='upload-img'></div>\n                                        <div className='user-status__button'>\n                                            <i class=\"fa fa-retweet\" aria-hidden=\"true\"></i>\n                                            <i class=\"fa fa-comment-o\" aria-hidden=\"true\"></i>\n                                            <i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\n                                            <i class=\"fa fa-share\" aria-hidden=\"true\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Feed;","import React, { useState } from 'react'\nimport NewPost from './NewPost';\nimport Feed from './Feed'\n\nconst data = [\n    {\n        userName: \"Pau\",\n        tweet: \"Hello World\"\n    },\n]\n\nfunction Main() {\n    const [tweets, setTweets] = useState(data)\n    return (\n        <div className='main'>\n            <NewPost onNewTweet={e => setTweets(tweets.concat(e))}></NewPost>\n            <Feed tweets={tweets}></Feed>\n        </div>\n    )\n}\n\nexport default Main;","import React from 'react'\n\nfunction Aside() {\n    return (\n        <div className='aside'>\n            <div className='sidebarColumn'>\n                <div className='search-bar'>\n                    <div className='search-icon'></div>\n                    <input className='search' type=\"text\" placeholder='Search Twitter' />\n                </div>\n                <div className='trend-section'>\n                    <div className='trend-container'>\n                        <div className='trend-header'>Trends for you</div>\n                        <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\n                    </div>\n                </div>\n                <div className='suggestion'>\n                    <h2>Who to follow</h2>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Aside;","import React from 'react';\nimport './App.css';\nimport Nav from './components/Nav'\nimport Main from './components/Main'\nimport Aside from './components/Aside'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Main></Main>\n      <Aside></Aside>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}